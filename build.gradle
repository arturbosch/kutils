plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'org.gradle.maven-publish'
    id 'com.github.ben-manes.versions' version '0.42.0'
    id 'io.gitlab.arturbosch.detekt' version '1.14.2'
    id 'org.sonarqube' version '3.3'
}

group 'io.gitlab.arturbosch'
version kutilsVersion

repositories {
    mavenCentral()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ["-Xopt-in=kotlin.Experimental", "-Xjvm-default=enable"]
        jvmTarget = "1.8"
    }
}

detekt {
    failFast = true
    buildUponDefaultConfig = true
    autoCorrect = true
    config = files("$projectDir/detekt/config.yml")
    baseline = file("$projectDir/detekt/baseline.xml")

    reports {
        txt.enabled = true
        html.enabled = false
        xml.enabled = false
    }
}

task detektProjectBaseline(type: io.gitlab.arturbosch.detekt.DetektCreateBaselineTask) {
    description = "Overrides current baseline."
    ignoreFailures.set(true)
    parallel.set(true)
    buildUponDefaultConfig.set(true)
    setSource(files(
            "$rootDir/src/main",
            "$rootDir/src/test"
    ))
    config.setFrom(files("$rootDir/detekt/config.yml"))
    baseline.set(file("$rootDir/detekt/baseline.xml"))
    include("**/*.kt")
    include("**/*.kts")
}

dependencies {
    detekt "io.gitlab.arturbosch.detekt:detekt-cli:$detektVersion"
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintestVersion"
    testImplementation "org.slf4j:slf4j-nop:$slf4jVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitEngineVersion"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
